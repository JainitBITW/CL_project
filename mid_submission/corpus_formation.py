# -*- coding: utf-8 -*-
"""corpus_formation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17moQWMxRqUW_dMj_aNMRNWlPpLj1jMrp
"""



!pip3 install inltk
!pip install stanza
import inltk
from inltk.inltk import tokenize
import nltk
nltk.download('punkt')

from inltk.inltk import get_similar_sentences

from nltk.tag import tnt
from nltk.corpus import indian
import nltk
nltk.download('indian')
!pip install indic-transliteration
from indic_transliteration import sanscript
from indic_transliteration.sanscript import transliterate
from inltk.inltk import setup
setup('hi')

"""above code is downloading required libraries"""



all_sent=[]
import requests
from bs4 import BeautifulSoup
from pprint import pprint
from inltk.inltk import tokenize 
url = 'https://www.abplive.com/news/india/himachal-pradesh-assembly-election-2022-schedule-date-announcement-by-eci-voting-will-be-on-12-november-2237732'
req = requests.get(url)
html_content = req.content
soup = BeautifulSoup(html_content, 'html5lib')
news_corpuss = soup.find_all('a')
links = []
for i in news_corpuss:
  link=i.get('href')
  if(link is not None):
    if link.startswith('https://www.ab'):
      links.append(link)
temp=len(links) 
corpus = ""
flag=0
k=0
for i in range(len(links)):
  

  url = links[i]
  req = requests.get(url)


  


  html_content = req.content
  soup = BeautifulSoup(html_content, 'html5lib')
  news_corpus = soup.find_all('p')
  

  for j in news_corpus:
    
    text=j.text
    corpus=corpus+text
    
    for z in text:
      if z=="।" or z=="|" or z==".":
        k=k+1 
    
      if(k)>100:
        flag=1;
        break
    
    
    
  if(flag==1):
    break


!pip3 install inltk
!pip install stanza
import inltk
from inltk.inltk import tokenize
import nltk
nltk.download('punkt')

from inltk.inltk import get_similar_sentences

from nltk.tag import tnt
from nltk.corpus import indian
import nltk
nltk.download('indian')
!pip install indic-transliteration
from indic_transliteration import sanscript
from indic_transliteration.sanscript import transliterate
from inltk.inltk import setup
setup('hi')
  
   
  
  
  
  
  
all_sent=corpus.split("।" or "|")

"""the above code is prepairing the curpus"""



# !pip3 install inltk
# import inltk
# # from inltk.inltk import tokenize 
from inltk.inltk import tokenize


words=tokenize(corpus, "hi")
print(words)

"""above code doing word tokenisation"""



html_content = req.content
soup = BeautifulSoup(html_content, 'html5lib')
import re
cleaned_corpus=""
for i in words:
  
  
  
    cleaned_corpus+=i

cleaned_corpus = re.sub('▁', " " , cleaned_corpus)

cleaned_corpus = re.sub('[A-Za-z]', "" , cleaned_corpus)
cleaned_corpus = re.sub('[0-9]', "" , cleaned_corpus)

disallowed_characters = "._!,“।–()@#$%&*/|:”"
dis = "-?"
for character in disallowed_characters:
	cleaned_corpus = cleaned_corpus.replace(character, "")
  
for character in dis:
  cleaned_corpus = cleaned_corpus.replace(character, " ")
print(cleaned_corpus)

"""above is the cleaning corpus(without punctuation,foriegn words ,numbers)


"""

stop_words = ['▁','▁मैं','▁मेरे','▁मुझे','▁उसने','▁हमारे','▁हमें', '▁मुझको', '▁अपने आप को', '▁हमने', '▁हमारा', '▁हम', '▁आप', '▁आपका', '▁अपने आप', '▁स्वयं', '▁वह', '▁इसे', '▁उसके', '▁खुद को', '▁कि वह', '▁खुद ही', '▁यह', '▁इसके', '▁उन्होने', '▁अपने', '▁क्या', '▁जो', '▁किसे', '▁किसको', '▁कि', '▁ये', '▁हूँ', '▁होता है', '▁रहे', '▁थी', '▁थे', '▁होना', '▁गया',  '▁किया', '▁है', '▁पडा', '▁होने', '▁करना', '▁किया', '▁एक', '▁लेकिन', '▁अगर', '▁या', '▁क्यूंकि', '▁जैसा', '▁जबकि', '▁की', '▁पर', '▁द्वारा', '▁साथ', '▁खिलाफ', '▁बीच', '▁में',  '▁दौरान', '▁ऊपर', '▁नीचे', '▁को', '▁से', '▁तक', '▁निकल', '▁बंद', '▁तहत', '▁दुबारा', '▁आगे', '▁फिर',  '▁यहाँ', '▁वहाँ', '▁कब', '▁कहाँ', '▁क्यों', '▁कैसे', '▁सारे', '▁किसी', '▁दोनो', '▁प्रत्येक', '▁ज्यादा', '▁अधिकांश', '▁अन्य', '▁ऐसा', '▁मात्र', '▁खुद', '▁समान', '▁इसलिए', '▁बहुत', '▁सकता', '▁जायेंगे', '▁जरा', '▁चाहिए', '▁अभी', '▁और', '▁रखें', '▁का', '▁हैं', '▁इस', '▁होता', '▁करने', '▁ने', '▁बनी', '▁तो', '▁ही', '▁हो', '▁था', '▁हुआ', '▁बाद', '▁लिए', '▁इसमें', '▁दो', '▁वे', '▁करते', '▁कहा', '▁वर्ग', '▁कई', '▁करें','▁उनके', '▁यदि', '▁हुई', '▁जा', '▁कहते', '▁जब', '▁होते', '▁कोई', '▁हुए', '▁व', '▁जैसे', '▁सभी', '▁करता', '▁तरह', '▁उस', '▁आदि', '▁इसी', '▁पे', '▁तथा', '▁भी', '▁परंतु', '▁इन', '▁कम', '▁दूर', '▁पूरे', '▁गये', '▁तुम', '▁मै', '▁यहां', '▁हुये', '▁कभी', '▁प्रति', '▁इन्हें', '▁अब', '▁जिसमें', '▁लिया', '▁बड़ा' '▁तब', '▁उसे', '▁जाते', '▁लेकर', '▁बड़े', '▁दूसरे', '▁जाने', '▁बाहर', '▁स्थान', '▁उन्हें ', '▁गए', '▁ऐसे', '▁जिससे', '▁समय', '▁दोनों', '▁किए','▁आज', '▁कल','▁इत्यादि','▁बिलकुल', '▁निहायत','▁दूसरा', '▁साबुत', '▁वग़ैरह', '▁कौनसा', '▁लिये', '▁दिया', '▁जिसे', '▁तिसे', '▁काफ़ी', '▁पहले', '▁बाला', '▁मानो', '▁अंदर', '▁भीतर', '▁पूरा', '▁सारा', '▁वहीं', '▁जहाँ', '▁जीधर', '▁एवं', '▁कुछ', '▁कुल', '▁जिस', '▁जिन', '▁तिस', '▁तिन', '▁कौन', '▁किस', '▁संग', '▁यही', '▁बही', '▁उसी', '▁मगर', '▁कर', '▁मे', '▁एस', '▁उन', '▁सो', '▁अत']
new_words=[]
for i in words:
  if i in stop_words:
    continue
  new_words.append(i)

for i in new_words:
  if i[0]!="▁":
    new_words.remove(i)
print(new_words)
print(len(new_words))

"""above are the words after removal of stop words """
